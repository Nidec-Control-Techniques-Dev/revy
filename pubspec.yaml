name: revy
description: "Your AI Sales Companion"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.3.4 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  multi_dropdown: ^2.1.4
  google_maps_flutter: ^2.6.1
  flutter_typeahead: ^5.2.0
  slide_to_act: ^2.0.2
  accordion: ^2.6.0
  json_annotation: ^4.9.0
  geolocator: ^12.0.0
  freezed_annotation: ^2.4.1
  http: ^1.2.1
  flutter_dotenv: ^5.1.0
  # rxdart: any
  # flutter_google_places: ^0
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  percent_indicator: ^4.2.3
  cupertino_icons: ^1.0.6
  multi_select_flutter: ^4.0.0

  # A dart client for Supabase.
  # This client makes it simple for developers to build secure and scalable products.
  supabase_flutter: ^2.5.1

  # An SVG rendering and widget library for Flutter,
  # which allows painting and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg: ^2.0.10+1

  # This package helps in creation of forms in Flutter by removing the boilerplate code,
  # reusing validation, react to changes, and collect final user input.
  # flutter_form_builder: ^9.2.1

  # Form Builder Validators set of validators for FlutterFormBuilder.
  # Provides common validators and a way to make your own.
  # form_builder_validators: ^9.1.0

  # TODO: [p3] Experiment: Try out the formz package for form validation.
  # A unified form representation in Dart which aims to simplify
  # form representation and validation in a generic way.
  formz: ^0.7.0

  # Flutter Widgets that make it easy to implement the BLoC (Business Logic Component)
  # design pattern. Built to be used with the bloc state management package.
  flutter_bloc: ^8.1.5
  # bloc: ^8.1.4

  # An extension to the bloc state management library which
  # automatically persists and restores bloc states.
  # hydrated_bloc: ^9.1.5

  # Custom event transformers inspired by ember concurrency.
  # Built to be used with the bloc state management package.
  bloc_concurrency: ^0.2.5

  # A Dart package that helps to implement value based equality without
  # needing to explicitly override == and hashCode.
  equatable: ^2.0.5
  pie_chart: ^5.4.0
  # Functional programming in Dart and Flutter. All the main functional programming
  # types and patterns fully documented, tested, and with examples.
  fpdart: ^1.1.0

  # Contains code to deal with internationalized/localized messages, date and number formatting
  # and parsing, bi-directional text, and other internationalization issues.
  intl: ^0.19.0

  # Flutter plugin for getting commonly used locations on host platform file systems,
  # such as the temp and app data directories.
  path_provider: ^2.1.3

  # A powerful HTTP networking package, supports Interceptors, Aborting and canceling
  # a request, Custom adapters, Transformers, etc.
  dio: ^5.4.3+1

  # Flutter plugin for discovering the state of the network
  # (WiFi & mobile/cellular) connectivity on Android and iOS.
  # connectivity_plus: ^6.0.3
  google_fonts: ^6.2.1

  # A cross platform plugin for displaying and scheduling local notifications for Flutter
  # applications with the ability to customise for each platform.
  flutter_local_notifications: ^17.1.0

  # Simple direct Service Locator that allows to decouple the interface from a concrete
  # implementation and to access the concrete implementation from everywhere in your App"
  get_it: ^7.7.0
  package_info_plus: ^8.0.0
  device_info_plus: ^10.1.0
  wakelock_plus: ^1.2.4
  flutter_launcher_icons: ^0.13.1
  network_info_plus: ^5.0.3
  shared_preferences: ^2.2.3
  go_router: ^14.0.2
  upgrader: ^10.3.0
  permission_handler: ^11.3.1
  logger: ^2.2.0
  fl_chart: ^0.68.0
  syncfusion_flutter_charts: ^25.1.42+1
  calendar_view: ^1.1.0
  flutter_spinkit: ^5.2.1
  # awesome_snackbar_content: ^0.1.3
  cached_network_image: ^3.3.1
  animations: ^2.0.11
  envied: ^0.5.4+1
  rive: ^0.13.4
  flutter_form_builder: ^9.2.1
  # injectable: ^2.4.2
  uuid: ^3.0.4

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

  # A testing library which makes it easy to test blocs.
  # Built to be used with the bloc state management package.
  bloc_test: ^9.1.7
  build_runner: ^2.4.9
  envied_generator: ^0.5.4+1
  supabase: ^2.1.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/avatars/
    - assets/backgrounds/
    - assets/fonts/
    - assets/icons/
    - assets/illustrations/
    - assets/images/
    - assets/rive_assets/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
